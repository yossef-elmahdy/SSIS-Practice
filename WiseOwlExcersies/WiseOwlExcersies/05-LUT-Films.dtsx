<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/4/2023 12:07:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-E550ER8"
  DTS:CreatorName="WW930\a895416"
  DTS:DTSID="{11D94637-834F-4AAE-A5F1-5EE9EE46E2D9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="05-LUT-Films"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{B5C549CF-76C1-4CA2-8EE1-28C1E012969E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{16FB9370-2E4B-4294-9CA7-51374C6F3B7D}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Users\a895416\Downloads\SSIS Excersises\Lookup Transforms\E4\List of films.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FilmID"
              DTS:DTSID="{C0D28E65-B1E1-4D62-A4AF-422E04CB9DDC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{C13A2493-1435-423D-9BC6-19F41F00B653}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Director"
              DTS:DTSID="{9CABEC90-63E6-4080-8B17-F7E1BE7102AD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Genre"
              DTS:DTSID="{9055B15D-5693-4AB2-80D9-FA7DD0EEB309}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.test_db]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B5495AEE-743E-4730-9C24-FD4D7042F4BD}"
      DTS:ObjectName="localhost.test_db">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=test_db;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{B5495AEE-743E-4730-9C24-FD4D7042F4BD}localhost.test_db;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\List films with new genres"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B05B8695-84C3-4971-BFF0-277A0CE86C22}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="List films with new genres"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\List films with new genres\FilmsForLookupExercise Table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="FilmsForLookupExercise Table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\List films with new genres\FilmsForLookupExercise Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.test_db]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.test_db]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[FilmName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      length="255"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[FilmName]"
                      name="FilmName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      name="GenreId" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw)"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="If Genre &gt; 22 (just added filmw)"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[GenreId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Case 1]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 1"
                  synchronousInputId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[GenreId]} &gt; 22</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">GenreId &gt; 22</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\List films with new genres\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\List films with new genres\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\List films with new genres\Union All.Inputs[Union All Input 1].Columns[FilmName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FilmName"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[FilmName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\List films with new genres\Union All.Inputs[Union All Input 1].Columns[Director]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Director"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[Director]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\List films with new genres\Union All.Inputs[Union All Input 1].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output].Columns[GenreId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\List films with new genres\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\List films with new genres\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\List films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      name="GenreId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\List films with new genres.Paths[Case 1]"
              endId="Package\List films with new genres\Union All.Inputs[Union All Input 1]"
              name="Case 1"
              startId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Outputs[Case 1]" />
            <path
              refId="Package\List films with new genres.Paths[OLE DB Source Output]"
              endId="Package\List films with new genres\If Genre &gt; 22 (just added filmw).Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\List films with new genres\FilmsForLookupExercise Table.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Search for all genres and insert into FilmsForLookupExercise table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{26AAD50C-50E9-452D-95A0-3736D33C8C8E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Search for all genres and insert into FilmsForLookupExercise table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input].Columns[Genre]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Genre"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Genre]" />
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Title"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Title]" />
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input].Columns[Director]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Director"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Director]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]"
                      name="Copy of Genre"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Genre]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                      name="Copy of Title"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Title]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Director]"
                      name="Copy of Director"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Director]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Films flat file"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[FilmID]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[FilmID]"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Title]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Director]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Director]"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Genre]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Genre]"
                      length="50"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[FilmID]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Director]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Genre]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FilmsForLookupExercise Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.test_db]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.test_db]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]" />
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].Columns[Copy of Title]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Title"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]" />
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].Columns[Copy of Director]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Director"
                      externalMetadataColumnId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Director]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup for Genre"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.test_db]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.test_db]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input].Columns[Copy of Genre]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Genre"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">GenreId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Data Conversion Output]"
              endId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Flat File Source Output]"
              endId="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion.Inputs[Data Conversion Input]"
              name="Flat File Source Output"
              startId="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Lookup Match Output]"
              endId="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre.Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Search for Genre and insert new Genres"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7843FE0D-E8C0-4712-A935-D462199CC9DC}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Search for Genre and insert new Genres"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Search for Genre and insert new Genres\Add New Genre"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Add New Genre"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for Genre and insert new Genres\Add New Genre.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.test_db]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.test_db]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input].Columns[GenreName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="GenreName"
                      externalMetadataColumnId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      lineageId="Package\Search for Genre and insert new Genres\Group by Genre.Outputs[Aggregate Output 1].Columns[GenreName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      dataType="wstr"
                      length="255"
                      name="GenreName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Add New Genre.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Add New Genre.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Add New Genre.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Add New Genre.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Add New Genre.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for Genre and insert new Genres\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Search for Genre and insert new Genres\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Data Conversion.Inputs[Data Conversion Input].Columns[Genre]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Genre"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Genre]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]"
                      name="Copy of Genre"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Genre]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for Genre and insert new Genres\Films flat file"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Films flat file"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for Genre and insert new Genres\Films flat file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[FilmID]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[FilmID]"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Title]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Director]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Director]"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Genre]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Genre]"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[FilmID]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Director]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].ExternalColumns[Genre]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for Genre and insert new Genres\Group by Genre"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Group by Genre"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Search for Genre and insert new Genres\Group by Genre.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Group by Genre.Inputs[Aggregate Input 1].Columns[Copy of Genre]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Genre"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Group by Genre.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Group by Genre.Outputs[Aggregate Output 1].Columns[GenreName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Group by Genre.Outputs[Aggregate Output 1].Columns[GenreName]"
                      name="GenreName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for Genre and insert new Genres\Lookup for Genre"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup for Genre"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.test_db]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.test_db]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input].Columns[Copy of Genre]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Genre"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">GenreId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Search for Genre and insert new Genres\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[FilmID]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FilmID"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[FilmID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[FilmID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[Title]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Title"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Title]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Title]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[Director]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Director"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Director]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Director]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[Genre]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Genre"
                      lineageId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output].Columns[Genre]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Genre]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[Copy of Genre]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Genre"
                      lineageId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Genre]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Copy of Genre]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Match Output].Columns[GenreId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[GenreId]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[FilmID]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Title]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Genre]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Copy of Genre]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[Copy of Genre]"
                      name="Copy of Genre" />
                    <outputColumn
                      refId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\Search for Genre and insert new Genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      name="GenreId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Search for Genre and insert new Genres.Paths[Aggregate Output 1]"
              endId="Package\Search for Genre and insert new Genres\Add New Genre.Inputs[OLE DB Destination Input]"
              name="Aggregate Output 1"
              startId="Package\Search for Genre and insert new Genres\Group by Genre.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Search for Genre and insert new Genres.Paths[Data Conversion Output]"
              endId="Package\Search for Genre and insert new Genres\Lookup for Genre.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\Search for Genre and insert new Genres\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Search for Genre and insert new Genres.Paths[Flat File Source Output]"
              endId="Package\Search for Genre and insert new Genres\Data Conversion.Inputs[Data Conversion Input]"
              name="Flat File Source Output"
              startId="Package\Search for Genre and insert new Genres\Films flat file.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Search for Genre and insert new Genres.Paths[Lookup Match Output]"
              endId="Package\Search for Genre and insert new Genres\Union All.Inputs[Union All Input 1]"
              name="Lookup Match Output"
              startId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Search for Genre and insert new Genres.Paths[Lookup No Match Output]"
              endId="Package\Search for Genre and insert new Genres\Group by Genre.Inputs[Aggregate Input 1]"
              name="Lookup No Match Output"
              startId="Package\Search for Genre and insert new Genres\Lookup for Genre.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate FilmsForLookupExercise Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4BA4E79B-D93C-421B-B128-AA6FBCE0388D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate FilmsForLookupExercise Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B5495AEE-743E-4730-9C24-FD4D7042F4BD}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE FilmsForLookupExercise;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{24509FCC-F587-4832-A1A5-7F5AC016F97E}"
      DTS:From="Package\Search for Genre and insert new Genres"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Search for all genres and insert into FilmsForLookupExercise table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C731D014-CF1F-401D-8EC6-614CD6C33F9D}"
      DTS:From="Package\Search for all genres and insert into FilmsForLookupExercise table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\List films with new genres" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{0C8812FE-AAB2-4411-AAA6-2EC1633DF87F}"
      DTS:From="Package\Truncate FilmsForLookupExercise Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Search for Genre and insert new Genres" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="264.8,41.6"
          Id="Package\Search for Genre and insert new Genres"
          TopLeft="335.83331498421,170.733332146075" />
        <NodeLayout
          Size="384.8,41.6"
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table"
          TopLeft="270.833318535653,284.266664689912" />
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\List films with new genres"
          TopLeft="370.833313071894,399.533330555029" />
        <NodeLayout
          Size="265.6,41.6"
          Id="Package\Truncate FilmsForLookupExercise Table"
          TopLeft="329.166648681794,63.2666662267182" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="465.733316759932,212.333332146075">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.9333325438369"
              Start="0,0"
              End="0,64.4333325438369">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.4333325438369" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="466.233315803774,325.866664689912">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.6666658651169"
              Start="0,0"
              End="0,66.1666658651169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.1666658651169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="465.099981833002,104.866666226718">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.866665919357"
              Start="0,0"
              End="0,58.366665919357">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.366665919357" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Search for Genre and insert new Genres">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,41.6"
          Id="Package\Search for Genre and insert new Genres\Films flat file"
          TopLeft="392.499978554746,58.9333329235183" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Search for Genre and insert new Genres\Union All"
          TopLeft="240.833320174781,348.39999757727" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Search for Genre and insert new Genres\Lookup for Genre"
          TopLeft="387.499978827935,235.733331694073" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Search for Genre and insert new Genres\Data Conversion"
          TopLeft="384.999978964528,154.266665593915" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Search for Genre and insert new Genres\Group by Genre"
          TopLeft="534.166637481088,356.19999752303" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\Search for Genre and insert new Genres\Add New Genre"
          TopLeft="534.999970768891,461.933330121107" />
        <EdgeLayout
          Id="Package\Search for Genre and insert new Genres.Paths[Lookup No Match Output]"
          TopLeft="492.299978827935,277.333331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="118.266658653153,78.866665828957"
              Start="0,0"
              End="118.266658653153,71.366665828957">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.0175120977259" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.0175120977259"
                    Point2="0,32.0175120977259"
                    Point3="4,32.0175120977259" />
                  <mssgle:LineSegment
                    End="114.266658653153,32.0175120977259" />
                  <mssgle:CubicBezierSegment
                    Point1="114.266658653153,32.0175120977259"
                    Point2="118.266658653153,32.0175120977259"
                    Point3="118.266658653153,36.0175120977259" />
                  <mssgle:LineSegment
                    End="118.266658653153,71.366665828957" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="3.32694260782659,37.0175120977259,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for Genre and insert new Genres.Paths[Lookup Match Output]"
          TopLeft="441.899978827935,277.333331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-141.066658653154,71.066665883197"
              Start="0,0"
              End="-141.066658653154,63.566665883197">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8509449555665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.8509449555665"
                    Point2="0,28.8509449555665"
                    Point3="-4,28.8509449555665" />
                  <mssgle:LineSegment
                    End="-137.066658653154,28.8509449555665" />
                  <mssgle:CubicBezierSegment
                    Point1="-137.066658653154,28.8509449555665"
                    Point2="-141.066658653154,28.8509449555665"
                    Point3="-141.066658653154,32.8509449555665" />
                  <mssgle:LineSegment
                    End="-141.066658653154,63.566665883197" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.724716045327,33.8509449555665,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for Genre and insert new Genres.Paths[Flat File Source Output]"
          TopLeft="461.749978759637,100.533332923518">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.7333326703971"
              Start="0,0"
              End="0,46.2333326703971">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.2333326703971" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for Genre and insert new Genres.Paths[Data Conversion Output]"
          TopLeft="465.049978896231,195.866665593915">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.8666661001575"
              Start="0,0"
              End="0,32.3666661001575">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3666661001575" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for Genre and insert new Genres.Paths[Aggregate Output 1]"
          TopLeft="610.783304124989,397.79999752303">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.1333325980772"
              Start="0,0"
              End="0,56.6333325980772">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.6333325980772" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Search for Genre and insert new Genres\Lookup for Genre">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Genre]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Search for Genre and insert new Genres\Add New Genre">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Search for all genres and insert into FilmsForLookupExercise table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,41.6"
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table\Films flat file"
          TopLeft="431.999994258086,73.9999997913838" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre"
          TopLeft="425.712114802289,252.533331883219" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table\Data Conversion"
          TopLeft="426.999994531274,150.266665927701" />
        <NodeLayout
          Size="221.6,41.6"
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table"
          TopLeft="400.454539487307,359.999994635582" />
        <EdgeLayout
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Lookup Match Output]"
          TopLeft="508.283327144798,294.133331883219">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.8666627523625"
              Start="0,0"
              End="0,58.3666627523625">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.3666627523625" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,23.3786438761813,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Flat File Source Output]"
          TopLeft="502.49999439468,115.599999791384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.6666661363172"
              Start="0,0"
              End="0,27.1666661363172">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1666661363172" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Search for all genres and insert into FilmsForLookupExercise table.Paths[Data Conversion Output]"
          TopLeft="505.156054666781,191.866665927701">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.666665955518"
              Start="0,0"
              End="0,53.166665955518">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.166665955518" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Search for all genres and insert into FilmsForLookupExercise table\Lookup for Genre">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Search for all genres and insert into FilmsForLookupExercise table\FilmsForLookupExercise Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\List films with new genres">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="120,41.6"
          Id="Package\List films with new genres\Union All"
          TopLeft="548.999991819262,324.999995157122" />
        <NodeLayout
          Size="223.2,41.6"
          Id="Package\List films with new genres\If Genre &gt; 22 (just added filmw)"
          TopLeft="499.99999254942,199.999997019768" />
        <NodeLayout
          Size="221.6,41.6"
          Id="Package\List films with new genres\FilmsForLookupExercise Table"
          TopLeft="505.999992460012,68.9999989718198" />
        <EdgeLayout
          Id="Package\List films with new genres.Paths[OLE DB Source Output]"
          TopLeft="614.199992504716,110.59999897182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89.3999980479483"
              Start="0,0"
              End="0,81.8999980479483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.8999980479483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\List films with new genres.Paths[Case 1]"
          TopLeft="610.299992184341,241.599997019768">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,83.3999981373541"
              Start="0,0"
              End="0,75.8999981373541">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.8999981373541" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.87921875,29.949999068677,47.7584375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\List films with new genres\FilmsForLookupExercise Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>